执行shell脚本
	-> sh 
	-> bash
	-> . xx	执行脚本时不分配新的资源来执行脚本，而是占用当前终端的资源运行脚本。
	-> source /xxx/xx

常用的打印
	cat <<eof
	>123
	>456
	>eof


shell变量
	什么是变量
		使用固定的字符串储存变化的数据
	定义变量
		变量=数值
	变量的使用规则以及命名规则
		当变量生效时候，后写的同一个变量数值覆盖新的数值
		数字字符下划线，等号前后不能有空格
	使用变量
	输出变量
	销毁变量
		unset 变量名称
	shell变量类型
		察看已经定义的系统环境变量：env
		察看自己定义的环境变量：set

		常用的系统环境变量：$path $HOME $HOSTNAME $SHELL $MAIL

系统环境变量：系统启动时候读取系统配置文件或服务的配置文件，定义的变量。变量名和存储的的数值是固定的，值会根据系统运行环境和配置自动获取。我们在写脚本的时候，可以直接使用系统环境变量，也可以修改系统环境变量的数值，变量名通常用大小字母来表示。

		位置变量：
		$1 .. $9 ${10} .. 

		预定于变量：
			/bin/bash 这种shell程序内置的变量，变量值是根据系统环境自动获取的
		------------------------------------------------------------------------------
		|  $0 	当前所在的进程或脚本名
		|  $$	当前运行的脚本的PID号   
		|  $?	命令执行后的返回数值，0正常其他有问题	
		|  $#	输出当前输入脚本内的变量的总个数
		|  $*	把输入当前脚本的所有变量打印出来
		|  $!	后台进程的PID号
		------------------------------------------------------------------------------	
		自定义变量：编写脚本时候，程序员程序需要定义的变量，定义变量时，要遵守变量的使用规则，编写脚本时，把变化的数据使用变量表示。
	给变量赋值的方式？
		普通赋值 x=1
		接受赋值 read -p '提示信息' 变量名称
		变量赋值给变量
		累加赋值
			PATH=/shell:$PATH
			echo $PATH
			
		获取命令结果赋值给变量



	全局变量：在当前Shell和其子shell中都可以使用
		export PATH=/ddy:$PATH
		export x=11
		export -n x

	局部变量：只能在当前的Shell
变量的作用范围：
	在脚本定义的变量中只在脚本下有效果

如何切换Shell
	cat /etc/shells

终端显示功能控制
	stty -echo  关闭显示
	stty echo   开启显示


