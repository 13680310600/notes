+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++														      +
+						day8-Linux的LVM逻辑卷                                             	
+												by:notebook	     +
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

yum config－manager --add  
磁盘＝512字节

文件系统的作用：数据在空间中排列的规则
lsblk  查看本机识别的分区

MBR／msdos 分区模式 (主引导记录分区方案)
	－> MBR 传统的分区方案  最大只支持到2T的大小
	-> GPT 新的分区方案 最大支持大小18EB
	-> 分区类型：主分区、扩展分区、逻辑分区
	－> 最多只能够有4个分区
   	    － 1～4个主分区，或者0～3个主分区+1个扩展分区(n个逻辑分区)
	    － 最大支持容量为2.2TB的磁盘
	    － 扩展分区不能格式化
					
						最多4个分区
	_________________________________________________
	|       第       ｜       第       ｜      第	   ｜          扩展分区 	   ｜
	|	一	 ｜	  二	   ｜	   三	   ｜—————      —————— |
	|	个	 ｜	  个	   ｜      个	   ｜逻辑分区1｜    ｜ 逻辑分区2  |
	|	主	 ｜	  主	   ｜	   主	   ｜—————      —————— |
	|      分 区	 ｜     分 区	   ｜    分 区	   ｜         逻辑分区3           ｜
	———————————————————————————————————————
	
分区的规划：

fdisk 交互式分区过程
	fdisk ／dev／新磁盘 
		n  创建新的分区
		p  查看分区
		d  删除分区
		w  保存并退出
	
	步骤 n －> 回车 －> 回车 －> 回车 －> 2G -> p -> w －> lsblk 

分区的格式化：

mkfs.xfs   分区设备路径
    .ext4  分区设备路径
    .vfat  分区设备路径

	mkfs.xfs
	blkid  查看文件系统的UUID

挂载使用：
	创建挂载点 －> mount /dev/vdb1 /挂载点 

综合分区：
	准备5表可用用分区，4个为2G，最后一个1G

partproble 刷新分区表
ls /dev/vdb[1-6]

使用磁盘空间
	1.查看识别胡磁盘 	lsblk
	2.划分分区		fdisk
	3.刷新分区		partprobe
	4.格式化分区		mkfs.ext4 mkfs.xfs
	5.挂载使用		mount

实现开机自动挂载
	- 配置文件/etc/fstab的记录格式
	格式：设备路径     挂载点    类型      参数    备份标记   检测顺序 
	   /dev/vdb1  /part1    xfs  defaults    0        0

	->传统的挂载方式vim -> 编辑修改文件
	->实现一键自动化挂载 －> blkid | grep '/dev/要挂载盘' ｜ echo '`awk '{print $2}'` /挂载点 xfs defaults 0 0' >>/etc/fstab
	->检测是否报错 mount －a
	－> vim补充在命令行模式下按住o在当前光标的下一行新建一行

图形界面一块80G磁盘
	主分区3个 	10G
	逻辑分区2个 	10G

LVM逻辑卷
	作用：整合分散的空间

  ———————————————————————————————————————————————————————
	形态化的过程：
			面粉 －> 大面团 －> 小面团 －> 蒸  －> 吃
	具体化的过程：
			将众多的物理卷 －> 组成卷组 －> 从卷组中划分逻辑卷

	 物理卷				    卷组
   Physical Volume	     ___________VG______________                     逻辑卷LV 
	————		     ｜				|                    _____________
       ｜   1  ｜ －－－－－－>    ｜				 	|                    |                      |
	————                    ｜					|————————> |			   |
	                             ｜          			|                    |_____________|
	————		     ｜    	   整合为一个		|
       ｜   2  ｜ －－－－－－>    ｜				|
	————                    ｜					|                    _____________
                                     ｜				|                    |                     |
	————                     |					|————————> |                     |
       ｜   3  ｜－－－－－－>      |					|                    |____________|
	————                     |___________________ |
					
 ———————————————————————————————————————————————————————
 实际中的操作：
	实战练习从划分到使用LV逻辑卷
	1 －> pvcreate /dev/盘 /dev/盘 .....
	2 －> pvs
	3 －> vg create systemvg /dev/pv盘[1-2]
	4 －> vgs
	5 －> lvcreate -L 大小 －n lv名称 vg盘名称
	6 －> lvs
	7 －> 逻辑卷难找所以系统默认让 －>  /dev/vg盘名称/lv盘名称 －>系统创建的一个软链接方便找lv盘
	8 －> mkfs.xfs /dev/vg盘名称/lv盘名称 
	9 －> blkid | grep '/dev/mapper/systemvg-mylv'|echo "`awk '{print $2}'` /lv ext4 defaults 0 0" >>/etc/fstab  一键搞定,或VIM编辑
	10 －> mount －a
	11 －> df-h

  ———————————————————————————————————————————————————————
  扩展逻辑卷
	1.卷组有足够的剩余空间
	lvs
	vgs
	格式：lvextend [-L +[大小] | -L [到多少] | -l [加多少个块]]  -n lv_name /dev/vg_name/lv_name
	lvextend -L 18G /dev/systemvg/mylv
	vgs
	lvs
	这个时候umount原来的挂载点再次挂载df -h发现大小没有改变因是以下内容

  ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
					     空间大小和文件系统的区别
  ＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝
		  空间系统
	－－－－－－－－－－－－－					
	｜	  	          ｜
	｜	 —————      ｜		区别			一个为文件实际存在的大小
	｜	｜文件系统｜	  ｜  ————————————>	一个为系统临时为LV划分的空间系统
	｜	 —————	  ｜					临时的实际上没有生效的，所以导致
	｜			  ｜					大小不为唯一，处理方法同质化融为一体
	—————————————

 	扩展文件系统的大小（在联影响文件的情况下扩容）
		ext4  －>  resize2fs
		xfs   －>  xfs_growfs
	
	实际操作：	
		df -h 
		resize2fs /dev/systemvg/mylv
		df -h

  ——————————————————————————————————————————————————————
	2.卷组没有足够胡剩余空间
		1 扩展卷组
			vgextend
		2 扩展逻辑卷空间的大小
			lvextend -L 大小 /dev/xx/lv名称
		3 扩展文件系统的大小
			resize2fs /dev/systemvg/mylv
		总结：重复以上命令实际扩充LV的大小达到扩建文件系统大小的目的

 =====================================================================
						逻辑卷也可以缩减
 =====================================================================
  1.缩减文件系统
  2.缩减空间
  3.实战

	umount /挂载点
	resize2fs -L 10G /dev/xxx/lv名称
	mount /xxx /xxx
	df -h

PE：
卷组划分空间的单位：PE  默认的大小为4M 
修改PE的大小：vgchange -s 1M VG名称
查看PE的大小：vgdispaly vg的名称
	实战：
		vgchange -s 1M VG名称
		vgdisplay VG名称
		lvcreate -L 250M -n lv LV名称 VG名称
		lvs

  －－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
  删除逻辑卷
         删除的顺序 －> 删除lv －> 删除vg －> 删除pv  
	
























	


