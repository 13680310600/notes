======================================================================

												Linux入门基础(四)
																			最下面一排制表符宽度：4 格式就正常
======================================================================

管理用户和组
	->用户帐号：1.可以登入系统 2.实现访问控制(不同的用户具备不同的权限)
	->组帐号：方便对用户帐号进行管理
	->唯一标识符： UID -> 用户ID  GID -> 组ID
	->Root(管理员)：UID=0
		
	组帐号：
		基本组(私有组)  附加组(公共组、从属组)
		一个用户至少属于一个组
		
用户组的管理
	添加用户 -> 用户基本信息存放在/etc/passwd文件中
	———————————————————————————————————————
	|root :  x    : 0 :    0   :   root   :     /root    : /bin/bash |
	———————————————————————————————————————
	| 用户名:密码占位符:UID:基本的GID:用户描述信息:该用户的家目录地址:默认的解释器 |
	———————————————————————————————————————
	
	
	useradd [选项] 用户
	————————————————————————————————————————
	| 常用命令选项						|	例子：
	|	-u 用户ID						|		-> useradd -u 1200 ds
	|	-d 家目录路径					|		-> useradd -d /opt/ss ss
	|	-s 登入Shell					|		-> useradd -s /sbin/nologin asd
	|	-G 附加组     					|		-> useradd -G [组名] 用户名
	| ____________________|_____________________________	
	-> 一旦有用户指定的解释器指定为：/sbin/nologin 不能登入操作系统
	-> id 用户名 查看用户的基本信息
	
	使用 -> groupadd [选项] 组名
		例如： groupadd cf
				
	设置登入密码：
		-> root可以暴力修改普通用户的密码
		-> passwd 用户名  -> 交互界面修改密码
		-> echo '密码' | passwd --stdin 用户名
	
	su - 用户名
		-> 切换要登入的用户
		
	管道操作：
		-> 符号 -> |  在命令中为桥梁
		-> 解释 -> 将前一个命令输出的结果交付给后一个命令，当作后面命令的参数再处理一遍
		-> 举例 -> cat -n /etc/passwd | head -12 | tail -5
		
	usermod [选项] 用户名
		常用的命令选项
		-> u 用户的ID 
		-> d 家目录路径
		-> s登入shell
		-> G重置附加组
		
	userdel [选项] 用户名
		-> -r 包括家目录一并删除
	
	/etc/shadow 存放用户的密码

组帐号的管理
	-> 组基本信息存放在/etc/group文件
	-> 组的密码占位符 -> 组的成员列表
	
	gpasswd 命令
		-> gpasswd [-g 组ID] 组名
			-a 添加一个用户
			-d 删除一个用户
		-> 或直接在/etc/group中直接添加
		
		
压缩和归档
	tar集成备份与恢复
	
	tar [选项] tar包的名字 被归档的文件1 ...被归档的文件N 
		-c 创建归档
		-x 释放归档
		-f 指定归档的文件名词
		-z -j -J 调用gz、bz2、xz等格式工具进行处理
		-t 显示归档中的文件清单
		-P 保持归档内文件的绝对路径
		-C 指定解压的路径
		
	-> Windos中先归档后压缩
	-> Linux归档与压缩分开进行 -> Linux独家压缩工具 -> gzip、bzip2、xz -> 不能压缩目录
	-> 压缩率 xz > bzip2 > gzip
					
											xz、bzip、gzip压缩率的测试
    ———————————————————————————————————————————————————
	 举例：
	 		[root@desktop0 etc]# tar -cPf "`date '+%Y-%m-%d_%H%M%S'`".tar.xz /etc/*
	 		[root@desktop0 etc]# tar -zcPf "`date '+%Y-%m-%d_%H%M%S'`".tar.gz /etc/*
			[root@desktop0 etc]# tar -jcPf "`date '+%Y-%m-%d_%H%M%S'`".tar.bz2 /etc/*
			[root@desktop0 etc]# tar -JcPf "`date '+%Y-%m-%d_%H%M%S'`".tar.xz /etc/*
	 ———————————————————————————————————————————————————
	 		-rw-r--r--. 1 0 0  30M 2月   5 15:31 2018-02-05_153116.tar.xz
	 		-rw-r--r--. 1 0 0 8.4M 2月   5 15:27 2018-02-05_152743.tar.gz
			-rw-r--r--. 1 0 0 7.1M 2月   5 15:27 2018-02-05_152757.tar.bz2
			-rw-r--r--. 1 0 0 5.8M 2月   5 15:28 2018-02-05_152812.tar.xz
	———————————————————————————————————————————————————
	总结：			
						归档后大小										30M
						gzip											8.4M
						bzip2											7.1M
						xz												5.8M
						总压缩率：			72%	 		 76.4%			80.7%
	 ———————————————————————————————————————————————————
	 

查看日期和时间
	date -s 修改时间
	 
NTP网络时间协议
	-> Network Time Protocol
	   NTP服务器为客户机提供标准时间
	   NTP客户机需要与NTP服务器保持沟通
	 
	 服务端：Linux系统上一款软件 classroom.example.com
	 客户端：客户端软件
	 
	1.安装客户端chrony
		yum -y install chrony
	2.配置chrony客户端软件	 
		vim /etc/chrony.conf		Linux中以#开头的行都是注释，提示的意思
			server classroom.example.com iburst
	3.重启客户端软件服务
		systemctl restart chronyd		重启服务
		server chronyd restart			重启服务
		chkconfig chronyd on	   			开机启动
		systemctl enable chronyd			开机启动
		daemon 守护进程
	4.验证	
		date -s 'xxxxxx'
		systemctl restart chronyd
		date		
	 
cron计划任务
	用途：按照设定好的时间间隔为用户反复执行一条或多条的固定命令的系统任务
	软件包：cronie、crontabs
	日志文件：/var/log/crond
	系统服务：crond
	格式：					时间				执行任务
						 * * * * *				 命令行
						分时日月周			  （绝对路径）
						
						1.*匹配任意时间点
						
						
		
		crontab -e [-u 用户名]
			*/1 * * * * date '+%x-%X'>>/opt/date.txt
			
grep 匹配空行
	-> "^$" 空行
	-> 只显示有效配置数据：grep -v ‘^#’ /xx/xxx |grep -v "^$" >/opt/a.txt
						
						
